Nuts and Bolts of WebSocket
===========================

## Introduction to WebSocket

* WebSocket introduction slides
* Chrome Developer Tools, Console
+
[source,text]
----
ws = new WebSocket("ws://echo.websocket.org");
ws.send("hello world");
----
+
* In Network tab, show WebSocket frames
* Define message handlers
+
[source, text]
----
ws.onmessage = function(evt) { console.log(evt) }
----
+
or
+
[source, text]
----
ws.onmessage = function(evt) { alert(evt.data) }
----
+
* Copy/paste fragment from websocket.org/echo.html
** Show Firefox Developer Tools
* Use http://caniuse.com/websockets to check WebSocket compatibility
* Talk points
** WebSocket server is required, just like HTTP
** Do you want to write your own WebSocket server or use that is already battle-tested ? For example, 200-line HTTP server is useful to begin with but production nginx or HTTPD are used in production

## WebSocket using Socket.io

* Show a simple sample, host NodeJS on OpenShift, use websocket.org client page

## WebSocket using JSR 356

* Introduction to JSR 356
* Hello World - explain and build using WildFly
* Chat Server
* Collaborative Whiteboard
* URI templating matching - message routing
* Client API - real-time entering of data, for example Google Docs
* Talk through programmatic endpoint

## WebSocket Security

* Securing WebSockets
** Cannot make ws:// from https:// page

## WebSocket using Undertow/WildFly

## WebSocket using Atmosphere

## Pub/Sub over WebSocket
### JMS - Need further discussion
### Showcase http://demo.kaazing.com/demo/jms/javascript/jms-javascript.html
### Showcase http://demo.kaazing.com/demo/jms/javascript/?d=stomp-stock with ActiveMQ on OpenShift
### MQTT, STOMP over WebSocket - Read details on http://www.amazon.com/The-Definitive-Guide-HTML5-WebSocket/dp/1430247401

## Autobahn??

## Comparing with REST

## Apply event-driven concept to REST

## WebSocket in OpenShift

## Contrast with SSE

## Contrast with Java Applet, Flash, Adobe AIR, Silverlight, Web RTC

## Surviving Firewall and Proxy
include::firewall.asciidoc[]

## WebSocket Debugging
include::debugging.asciidoc[]

## WebSocket Production Tips
include::production.asciidoc[]

## Client technologies (supporting other languages - Java APIs or .NET APIs)
### Kaazing Client API

## Native App (Objective C and Java Android)

## Embedded and IoT
### Bring the two devices


